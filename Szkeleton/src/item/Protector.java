package item;

/*

  Generated by StarUML(tm) Java Add-In

  @ Project : Varazsbogyok
  @ File Name : item.Protector.java
  @ Date : 2022. 03. 23.
  @ Author : varazsbogyok

*/

import entity.Virologist;
import game.Tile;
import game.Timer;
import inventory.IInventoryVisitor;
import inventory.ItemNotFoundException;
import item.Agent;

/**
 * Védelmet nyújtó ágens
 */
public class Protector extends Agent {
    /**
     * Ikon elérési út
     */
    protected String iconPath = "resources\\protecter.jpg";
    /**
     * Ágnes élettartama
     */
    public static int EXPIRE = 5;

    /**
     * Konstruktor
     */
    public Protector() {
        super(Protector.EXPIRE);
    }

    /**
     * Getter - Ikon elérési út
     */
    public String getIconPath() {
        return iconPath;
    }

    /**
     * A védelem ágens léptetését szimuláló fügvény.
     */
    public void step() throws ItemNotFoundException {
        this.expire--;
        if(expire == 0)
            decompose(virologist);
        Timer.getInstance().tick();
    }

    /**
     * A függvény paraméterben kapott virológuson fogja kifejteni a hatását az ágens.
     */
    public void effect(Virologist v) {
    }

    /**
     * A függvény paraméterben kapott virológuson szünteti meg a felkent ágens hatását.
     */
    public void decompose(Virologist v) throws ItemNotFoundException {
        v.removeApplied(this);
        virologist = null;
    }

    /**
     * A visitor tervezési mintát ez a függvény valósítja meg, ez fogja fogadni a védelem ágens típust.
     */
    public void accept(IInventoryVisitor i) {
        i.visit(this);
    }

    /**
     * A paraméterben kapott ágenst eltávolítjuk a paraméterben kapott virológusról.
     */
    public void protect(Virologist v, Agent a) throws ItemNotFoundException {
        if(a!=this)
            v.removeApplied(a);
    }

    /**
     * Az ágens felhasználására irányuló függvény.
     *
     * @param v1 A felhasználó
     * @param v2 Az elszenvedő
     */
    public void use(Virologist v1, Virologist v2) throws ItemNotFoundException {
        virologist = v2;
        v2.applyAgent(v1, this);
    }

    /**
     * Az ágens nincs hatással a rálépett mezőre
     */
    public void effect(Tile t) {
    }

}
