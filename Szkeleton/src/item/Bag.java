package item;

/*

  Generated by StarUML(tm) Java Add-In

  @ Project : Varazsbogyok
  @ File Name : item.Bag.java
  @ Date : 2022. 03. 23.
  @ Author : varazsbogyok

*/

import entity.Virologist;
import inventory.IInventoryHolder;
import inventory.IInventoryVisitor;
import inventory.Inventory;

/**
 * A játékban a zsák tipusú védõfelszerelés. Egy zsákban nem lehet még egy zsák.
 */
public class Bag extends Gear implements IInventoryHolder {
    /**
     * A zsákhoz tartozó inventory
     */
    protected Inventory inventory;
    /**
     * Inventory méret
     */
    public static int inventorySize = 25;

    /**
     * Konstruktor
     */
    public Bag() {
        inventory = new Inventory(Bag.inventorySize);
    }

    /**
     * A paraméterben kapott virológust megvédi a paraméterben kapott ágens ellen.
     */
    public void protect(Virologist v1, Virologist v2, Agent a) {
        // Nem védi meg
    }

    /**
     * A paraméterben kapott virológus kiválasztja a zsákot.
     *
     * @param v A Virológus aki felveszi a zsákot
     */
    public void equip(Virologist v) {

        Inventory inventory = v.getInventory();
        try {
            inventory.addItem(this);
            this.accept((IInventoryVisitor) inventory);
        } catch (Exception e) {
            System.out.println("Nem lehet a zsákot felvenni!");
        }

    }

    /**
     * A paraméterben kapott virológus másik védõfelszerelésre vált.
     *
     * @param v A Virológus aki leadja a zsákot
     */
    public void unequip(Virologist v) {
        Inventory inventory = v.getInventory();
        try {
            inventory.removeItem(this);
        } catch (Exception e) {
            System.out.println("Nem lehet a zsákot leadni mert az nincs a virológusnál");
        }
    }

    /**
     * A felszerelést nem lehet használni
     */
    public void use(Virologist v) {
    }

    /**
     * A visitor tervezési mintát ez a függvény valósítja meg, ez fogja fogadni a zsák típust.
     */
    public void accept(IInventoryVisitor i) {
        i.visit(this);
    }

    /**
     * Visszaadja a zsák tartalmát.
     */
    public Inventory getInventory() {
        return inventory;
    }
}
